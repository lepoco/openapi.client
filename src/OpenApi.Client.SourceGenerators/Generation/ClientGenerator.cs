// This Source Code Form is subject to the terms of the MIT License.
// If a copy of the MIT was not distributed with this file, You can obtain one at https://opensource.org/licenses/MIT.
// Copyright (C) Leszek Pomianowski and OpenAPI Client Contributors.
// All Rights Reserved.

using OpenApi.Client.SourceGenerators.Contracts;

namespace OpenApi.Client.SourceGenerators.Genertion;

internal sealed partial class ClientGenerator(OpenApiContract contract)
{
    public static readonly string[] Placeholders = ["%C", "%T", "%A"];

    public const string DocumentPrefix = """
        // <auto-generated/>
        // Generated with Open API Client Source Generator. Created by Leszek Pomianowski and OpenAPI Client Contributors.
        #pragma warning disable
        #nullable enable
        """;

    public string Generate()
    {
        StringBuilder builder = new StringBuilder(DocumentPrefix);

        builder.AppendLine();
        builder.Append("namespace ");
        builder.AppendLine(contract.Namespace);
        builder.AppendLine("{");

        // Result
        builder.AppendLine(ResultTemplate);
        builder.AppendLine();

        // Interface
        AppendInterface(builder, contract);
        builder.AppendLine();

        // Class
        AppendClass(builder, contract);

        // Types
        AppendTypes(builder, contract);

        builder.AppendLine("}");

        builder.Replace("%C", contract.ClassName);
        builder.Replace("%T", RemoveUnsafeWords(contract.Title));
        builder.Replace("%A", contract.Access);

        return builder.ToString();
    }

    private static string? RemoveUnsafeWords(string? input)
    {
        if (input is null)
        {
            return null;
        }

        foreach (string placeholder in ClientGenerator.Placeholders)
        {
            input = input.Replace(placeholder, string.Empty);
        }

        return input;
    }
}
